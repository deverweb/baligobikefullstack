version: "3"

services:
  frontend:
    build:
      dockerfile: Dockerfile
      context: ./front
    container_name: baligo-docker-frontend
    restart: unless-stopped
    env_file:
      - .env
    # ports:
    #   - 3000:3000
    # environment:
    # - NITRO_PORT=80
    # - NITRO_HOST=hello-world.com
    command: node .output/server/index.mjs
    networks:
      - baligo-docker-network
  nginx:
    image: nginx:stable-alpine
    container_name: baligo-docker-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - wordpress:/var/www/html
    depends_on:
      - frontend
      - db
      - wordpress
    networks:
      - baligo-docker-network
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=wordpress
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=user
      - MYSQL_PASSWORD=root
    volumes:
      - dbdata:/var/lib/mysql
    command: "--default-authentication-plugin=mysql_native_password"
    networks:
      - baligo-docker-network

  wordpress:
    depends_on:
      - db
    # image: wordpress:6.1.1-fpm-alpine
    build:
      dockerfile: Dockerfile
      context: ./back
    container_name: wordpress
    restart: unless-stopped
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=user
      - WORDPRESS_DB_PASSWORD=root
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - wordpress:/var/www/html
    networks:
      - baligo-docker-network

networks:
  baligo-docker-network:
    driver: bridge
volumes:
  wordpress:
  dbdata:
