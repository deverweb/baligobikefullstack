version: "3.9"

services:
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - front
      - wordpress
    volumes:
      - ./nginx/nginx-prod.conf:/etc/nginx/nginx.conf
      - certbot-etc:/etc/letsencrypt:rw
      - certbot-var:/var/lib/letsencrypt:rw
      - ./certbot/data:/var/www/certbot:rw
      - web-root:/var/www/html:rw
    networks:
      - app_network
    environment:
      - EMAIL=andreydever@gmail.com
      - DOMAIN=deverweb.ru
  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    depends_on:
      - nginx
    # command: certonly --webroot --webroot-path=/var/html/www --email andreydever@gmail.com --agree-tos --no-eff-email --staging -d deverweb.ru  -d www.deverweb.ru
    command: certonly -v --webroot --webroot-path /var/www/html --email andreydever@gmail.com --agree-tos --no-eff-email --staging -d deverweb.ru -d www.deverweb.ru  --webroot-path /var/www/html -d admin.deverweb.ru
    volumes:
      - certbot-etc:/etc/letsencrypt:rw
      - certbot-var:/var/lib/letsencrypt:rw
      - ./certbot/data:/var/www/certbot:rw
      - web-root:/var/www/html:rw
    networks:
      - app_network
  front:
    image: node:16-alpine
    networks:
      - app_network
    container_name: front
    restart: always
    env_file:
      - .env
    volumes:
      - ./front:/app
    command:
      - npm install && npm run build && node .output/server/index.mjs
    # build:
    #   context: ./front
    #   dockerfile: Dockerfile
    depends_on:
      - db
      - wordpress
    environment:
      - HOST=0.0.0.0
      - PORT=3000
      - DTEST=DTEST
    # command: node .output/server/index.mjs
  wordpress:
    image: wordpress
    restart: always
    container_name: wordpress
    depends_on:
      - db
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: exampleuser
      WORDPRESS_DB_PASSWORD: examplepass
      WORDPRESS_DB_NAME: exampledb
    volumes:
      - ./back/wp-content:/var/www/html/wp-content
    networks:
      - app_network

  db:
    image: mysql:5.7
    restart: always
    container_name: db
    environment:
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
      MYSQL_RANDOM_ROOT_PASSWORD: "1"
    volumes:
      - db:/var/lib/mysql
    networks:
      - app_network
    command: "--default-authentication-plugin=mysql_native_password"
volumes:
  wordpress:
  db:
  certbot-etc:
  certbot-var:
  web-root:
networks:
  app_network:
    driver: bridge
